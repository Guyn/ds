@function default-value($var, $value) {
	@if variable-exists($var) {
		@return $var;
	} @else {
		@return $value;
	}
}

@function mq($values...) {
	@debug $values;
	// The breakpoint name
	$bp: nth($values, 1);

	// Define the from and till breakpoints
	$bp-from: nth(map-get($mq, $bp), 1);
	$bp-till: nth(map-get($mq, $bp), 2);
	// Define the span, by not given it will assume only.
	$not: "";
	$span: "only";
	@if length($values) > 1 {
		$span: str-replace(nth($values, 2), "!", "");
		@if str-index(nth($values, 2), "!") {
			$not: "not";
		}
	}

	// Return the media query based on the span.
	@if $span == "only" {
		@return "#{$not} screen and (min-width: #{$bp-from}px) and (max-width: #{$bp-till}px)";
	} @else if $span == "up" {
		@return "#{$not} screen and (min-width:  #{$bp-from}px)";
	} @else if $span == "down" {
		@return "#{$not} screen and (max-width: #{$bp-till}px)";
	} @else {
		@return "#{$not} screen";
	}
}

$mq: (
	"small": (
		0,
		800
	),
	"medium": (
		801,
		1200
	),
	"large": (
		1201,
		1920
	),
	"xlarge": (
		1921,
		9999
	)
);
$grid-parts: 24;

$named-sizes: (
	"full": 1,
	"half": 1/2,
	"third": 1/3,
	"two-third": 2/3,
	"quarter": 1/4,
	"three-quarter": 3/4
);

.row {
	width: 100%;
	margin: auto;
	display: grid;
	grid-auto-flow: row;
	grid-column-gap: var(--column-gap, var(--gap, default-value("grid-gap", 0)));
	grid-row-gap: var(--row-gap, var(--gap, default-value("grid-gap", 0)));
	grid-template-columns: repeat(
		var(--rows, default-value("grid-rows", 24)),
		1fr
	);
	grid-template-rows: auto;
	> .column {
		grid-column: span #{$grid-parts};
		@each $bp-name, $bp-values in $mq {
			&.#{$bp-name} {
				@media #{mq($bp-name,up)} {
					@each $size-name, $size-value in $named-sizes {
						&--#{$size-name} {
							grid-column: span #{($grid-parts * $size-value)};
						}
					}
				}
			}
		}
	}
}
